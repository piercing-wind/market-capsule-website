import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useDispatch, useSelector } from "react-redux";
import { counterAdd } from "@/store/slices/authSlice";
import { Trans, useTranslation } from "next-i18next";
import { getFileLangList } from "@/middleware/getProps";
import { secureHeader } from "@/middleware/securityHeader";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useRouter } from "next/router";
import Link from "next/link";
import { wrapper } from "@/store";

const inter = Inter({ subsets: ["latin"] });

export default function Home(props) {
  const { t } = useTranslation("common");

  const dispatch = useDispatch()
  const router = useRouter();
  router.locale = props?.language
    ? props?.language
    : "en";

  router.defaultLocale = "en";


  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={` ${inter.className}`}>
        <div >
          <p>
            Get started by editing&nbsp;
            <code>pages/index.js</code>
          </p>
          <div>
            <a
              href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              target="_blank"
              rel="noopener noreferrer"
            >
              By{" "}
              <Image
                src="/vercel.svg"
                alt="Vercel Logo"
                className={styles.vercelLogo}
                width={100}
                height={24}
                priority
              />
            </a>
          </div>
        </div>
        {
          router?.locale === "ar" ? (
            <Link href={router?.asPath} passHref locale={"en"}> English</Link>
          ) : (

            <Link href={router?.asPath} passHref locale={"ar"}> العربية</Link>

          )
        }
        {
          t("headTitle")
        }
        <Trans i18nKey="headTitle">hhhh</Trans>

      </main>
    </>
  );
}

export const getServerSideProps = wrapper.getServerSideProps(store => async ({ req, res, locale }) => {

  let fileList = getFileLangList();
  secureHeader(req, res, locale);

  return {
    props: {
      data: "",
      language: locale,

      ...(await serverSideTranslations(locale, fileList)),
    },
  };

});
